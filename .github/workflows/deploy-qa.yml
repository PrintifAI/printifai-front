name: Build and Deploy QA

on:
  workflow_dispatch:

env:
  APP_NAME: ${{ github.event.repository.name }}-qa
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  HOST: ${{ vars.QA_HOST }}
  DOCKER_BUILDKIT: 1
  VPS_HOST: ${{ vars.VPS_HOST_QA }}

jobs:
  build-and-deploy-qa:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,format=short
            qa

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract host without username
        id: extract_host
        run: |
          FULL_HOST="${VPS_HOST}"
          PURE_HOST="${FULL_HOST#*@}"
          echo "pure_host=$PURE_HOST" >> $GITHUB_OUTPUT

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY_QA }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ steps.extract_host.outputs.pure_host }}" >> ~/.ssh/known_hosts

      - name: Write .env file
        run: echo "${{ secrets.ENV_FILE_QA }}" > .env

      - name: Create docker-compose.yml
        run: |
          cat > docker-compose.yml << EOL
          services:
            ${APP_NAME}:
              image: ${IMAGE_NAME}:qa
              restart: always
              env_file:
                - .env
              environment:
                - VIRTUAL_HOST=${HOST}
                - LETSENCRYPT_HOST=${HOST}
              logging:
                driver: "json-file"
                options:
                  max-size: "100m"
                  max-file: "3"
                  compress: "true"
          EOL

      - name: Copy files to VPS
        run: |
          ssh ${VPS_HOST} "mkdir -p ~/${APP_NAME}"
          scp .env ${VPS_HOST}:~/${APP_NAME}/.env
          scp docker-compose.yml ${VPS_HOST}:~/${APP_NAME}/docker-compose.yml

      - name: Deploy
        run: |
          ssh ${VPS_HOST} << EOF
            set -e
            echo "Logging into GHCR on VPS..."
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

            echo "Pulling latest image..."
            docker pull $IMAGE_NAME:qa

            echo "Running docker rollout..."
            cd ~/${APP_NAME}

            docker rollout ${APP_NAME}
          EOF